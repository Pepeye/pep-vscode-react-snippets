{
  "React ES7 Component with Constructor": {
    "prefix": "rcc",
    "body": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ${1:MyComponent} extends Component {\n    static propTypes = {\n        ${2}\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = { }\n    }\n\n    render() {\n        return (\n        ${3:<div>MyComponent</div>}\n        )\n    }\n}",
    "description": "React ES7 Component with Constructor"
  },
  "React ES7 Redux Container": {
    "prefix": "rcon",
    "body": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nclass ${1:MyComponent} extends Component {\n    static propTypes = {\n        ${4}\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = { }\n    }\n\n    render() {\n        return (\n        ${5:<div>MyComponent</div>}\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n${2}\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n${3}\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:MyComponent})",
    "description": "React ES7 Redux Container"
  },
  "React ES7 Component export": {
    "prefix": "rce",
    "body": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass ${1:Class} extends Component {\n    static propTypes = {\n        ${2}\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = { }\n    }\n\n    render() {\n        return (\n        ${3:<div>MyComponent</div>}\n        )\n    }\n}\n\nexport default ${1:Class}",
    "description": "React ES7 Component export"
  },
  "React ES7 Functional Component": {
    "prefix": "rfun",
    "body": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function ${1}(${3:props}) {\n    return (\n        ${4:<div>MyComponent</div>}\n    )\n}\n\n${1}.propTypes = {\n    ${2}\n}",
    "description": "React ES7 Functional Component"
  },
  // remove later
  "React ES7 Constructor": {
      "prefix": "rconst",
      "body": "constructor(props) {\n  super(props)\n  ${1}\n}",
      "description": "React ES7 Constructor"
    },
    "React ES6 bind method to this": {
      "prefix": "rbm",
      "body": "this.${1} = this.${1}.bind(this)",
      "description": "React ES6 bind method to this"
    },
    "React ES7 bind method to this": {
      "prefix": "rbm7",
      "body": "this.${1} = ::this.${1}",
      "description": "React ES7 bind method to this"
    },
    "React componentWillMount (ES7)": {
      "prefix": "cwm",
      "body": "componentWillMount() {\n  ${1}\n}",
      "description": "React componentWillMount (ES7)"
    },
    "React componentDidMount (ES7)": {
      "prefix": "cdm",
      "body": "componentDidMount() {\n  ${1}\n}",
      "description": "React componentDidMount (ES7)"
    },
    "React componentWillReceiveProps (ES7)": {
      "prefix": "cwr",
      "body": "componentWillReceiveProps(nextProps) {\n  ${1}\n}",
      "description": "React componentWillReceiveProps (ES7)"
    },
    "React shouldComponentUpdate (ES7)": {
      "prefix": "scu",
      "body": "shouldComponentUpdate(nextProps, nextState) {\n  ${1}\n}",
      "description": "React shouldComponentUpdate (ES7)"
    },
    "React componentWillUpdate (ES7)": {
      "prefix": "cwu",
      "body": "componentWillUpdate(nextProps, nextState) {\n  ${1}\n}",
      "description": ""
    },
    "React componentDidUpdate (ES7)": {
      "prefix": "cdu",
      "body": "componentDidUpdate(prevProps, prevState) {\n  ${1}\n}",
      "description": ""
    },
    "React componentWillUnmount (ES7)": {
      "prefix": "cwun",
      "body": "componentWillUnmount() {\n  ${1}\n}",
      "description": ""
    },
    "React this.props": {
      "prefix": "props",
      "body": "this.props${1}",
      "description": ""
    },
    "React this.state": {
      "prefix": "state",
      "body": "this.state${1}",
      "description": ""
    },
    "React cx({ ... }) (ES7)": {
      "prefix": "cx",
      "body": "cx({\n  ${1}: ${2},\n})",
      "description": ""
    },
    "React static defaultProps = { ... } (ES7)": {
      "prefix": "dp",
      "body": "static defaultProps = {\n  ${1}\n}",
      "description": ""
    },
    "React static propTypes = { ... } (ES7)": {
      "prefix": "pt",
      "body": "static propTypes = {\n  ${1}: PropTypes.${2:string},\n}",
      "description": ""
    },
    "React setState({ ... }) (ES7)": {
      "prefix": "sst",
      "body": "this.setState({\n  ${1}: ${2},\n})",
      "description": ""
    },
    "PropTypes.array": {
      "prefix": "pta",
      "body": "PropTypes.array",
      "description": ""
    },
    "PropTypes.array.isRequired": {
      "prefix": "ptar",
      "body": "PropTypes.array.isRequired",
      "description": ""
    },
    "PropTypes.bool": {
      "prefix": "ptb",
      "body": "PropTypes.bool",
      "description": ""
    },
    "PropTypes.bool.isRequired": {
      "prefix": "ptbr",
      "body": "PropTypes.bool.isRequired",
      "description": ""
    },
    "PropTypes.func": {
      "prefix": "ptf",
      "body": "PropTypes.func",
      "description": ""
    },
    "PropTypes.func.isRequired": {
      "prefix": "ptfr",
      "body": "PropTypes.func.isRequired",
      "description": ""
    },
    "PropTypes.number": {
      "prefix": "ptn",
      "body": "PropTypes.number",
      "description": ""
    },
    "PropTypes.number.isRequired": {
      "prefix": "ptnr",
      "body": "PropTypes.number.isRequired",
      "description": ""
    },
    "PropTypes.object": {
      "prefix": "ptobj",
      "body": "PropTypes.object"
    },
    "PropTypes.object.isRequired": {
      "prefix": "ptobjr",
      "body": "PropTypes.object.isRequired"
    },
    "PropTypes.string": {
      "prefix": "pts",
      "body": "PropTypes.string"
    },
    "PropTypes.string.isRequired": {
      "prefix": "ptsr",
      "body": "PropTypes.string.isRequired"
    },
    "PropTypes.node": {
      "prefix": "ptnode",
      "body": "PropTypes.node"
    },
    "PropTypes.node.isRequired": {
      "prefix": "ptnoder",
      "body": "PropTypes.node.isRequired"
    },
    "PropTypes.element": {
      "prefix": "pte",
      "body": "PropTypes.element"
    },
    "PropTypes.element.isRequired": {
      "prefix": "pter",
      "body": "PropTypes.element.isRequired"
    },
    "PropTypes.instanceOf": {
      "prefix": "pti",
      "body": "PropTypes.instanceOf(${1})"
    },
    "PropTypes.instanceOf.isRequired": {
      "prefix": "ptir",
      "body": "PropTypes.instanceOf(${1}).isRequired"
    },
    "PropTypes.oneOf": {
      "prefix": "ptof",
      "body": "PropTypes.oneOf([${1}])"
    },
    "PropTypes.oneOf.isRequired": {
      "prefix": "ptofr",
      "body": "PropTypes.oneOf([${1}]).isRequired"
    },
    "PropTypes.oneOfType": {
      "prefix": "ptoft",
      "body": "PropTypes.oneOfType([\n  ${1}\n])"
    },
    "PropTypes.oneOfType.isRequired": {
      "prefix": "ptoftr",
      "body": "PropTypes.oneOfType([\n  ${1}\n]).isRequired"
    },
    "PropTypes.arrayOf": {
      "prefix": "ptao",
      "body": "PropTypes.arrayOf(${1})"
    },
    "PropTypes.arrayOf.isRequired": {
      "prefix": "ptaor",
      "body": "PropTypes.arrayOf(${1}).isRequired"
    },
    "PropTypes.objectOf": {
      "prefix": "ptobjo",
      "body": "PropTypes.objectOf(${1})"
    },
    "PropTypes.objectOf.isRequired": {
      "prefix": "ptobjor",
      "body": "PropTypes.objectOf(${1}).isRequired"
    },
    "PropTypes.shape({...})": {
      "prefix": "ptshape",
      "body": "PropTypes.shape({\n  ${1}\n})"
    },
    "PropTypes.shape({...}).isRequired": {
      "prefix": "ptshaper",
      "body": "PropTypes.shape({\n  ${1}\n}).isRequired"
    },
    "PropTypes.any": {
      "prefix": "ptany",
      "body": "PropTypes.any"
    },
    "PropTypes.any.isRequired": {
      "prefix": "ptanyr",
      "body": "PropTypes.any.isRequired"
    }
}